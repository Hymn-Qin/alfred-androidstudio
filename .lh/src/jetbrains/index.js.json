{
    "sourceFile": "src/jetbrains/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1690196567283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1690196567283,
            "name": "Commit-0",
            "content": "import fs from \"fs\";\nimport os from \"os\";\nimport { xml2js } from \"xml-js\";\nexport async function getRecentProjects(app) {\n    const preferencesBasePath = `${os.homedir()}/Library/Application Support/Google/`;\n    const folders = fs.readdirSync(preferencesBasePath);\n    const appDir = folders.filter(name => name.startsWith(app)).reduce((p, v) => (p && p > v) ? p : v, '');\n    if (!appDir) {\n        throw new Error('Not Found Application');\n    }\n    const recentPreferencesFile = `${preferencesBasePath}${appDir}/options/recentProjects.xml`;\n    const recentPreferences = fs.readFileSync(recentPreferencesFile, { encoding: 'utf8' });\n    const recentPreferencesObj = xml2js(recentPreferences);\n    return recentPreferencesObj.elements.find(e => e.name === 'application')\n        .elements.find(e => e.name === 'component')\n        .elements.find(e => e.name === 'option' && e.attributes.name === 'additionalInfo')\n        .elements.find(e => e.name === 'map')\n        .elements.map(e => {\n        var _a;\n        const recentProjectMetaInfo = e.elements.find(e => e.name === 'value')\n            .elements.find(e => e.name === 'RecentProjectMetaInfo');\n        const options = recentProjectMetaInfo.elements.filter(i => i.name === 'option');\n        const frame = recentProjectMetaInfo.elements.find(i => i.name === 'frame');\n        const frameTitle = recentProjectMetaInfo.attributes.frameTitle;\n        const path = `${e.attributes.key}`.replace('$USER_HOME$', os.homedir());\n        return {\n            name: frameTitle ? `${frameTitle}`.split(' â€“ ')[0] : path.substring(path.lastIndexOf('/') + 1),\n            frameTitle,\n            path: path,\n            opened: recentProjectMetaInfo.attributes.opened !== 'true',\n            workspaceId: recentProjectMetaInfo.attributes.workspaceId,\n            activationTimestamp: +((_a = options.find(i => i.attributes.name === 'activationTimestamp')) === null || _a === void 0 ? void 0 : _a.attributes.value),\n            buildTimestamp: +options.find(i => i.attributes.name === 'buildTimestamp').attributes.value,\n            projectOpenTimestamp: +options.find(i => i.attributes.name === 'projectOpenTimestamp').attributes.value,\n            frame: frame && {\n                x: +frame.attributes.x,\n                y: +frame.attributes.y,\n                width: +frame.attributes.width,\n                height: +frame.attributes.height,\n                extendedState: +frame.attributes.extendedState\n            },\n        };\n    });\n}\n"
        }
    ]
}